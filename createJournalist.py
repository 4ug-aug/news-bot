"""
This script serves to create a fake Journalist for the blog.
The name of the Journalist is randomly generated from a list of names, and the photo is pulled from
https://thispersondoesnotexist.com/.

The description for the Journalist is generated by GPT3.
The journalist will have 2 areas of expertise, which are randomly generated from a list of topics.

The script will output a json file with the following structure:
{
    "name": "John Doe",
    "photo": "/some/path/to/photo.jpg",
    "description": "Hi my name is John Doe and I am a journalist.",
    "expertise": ["politics", "sports"]
}
"""

import json
import random
import requests
import openai
import pymongo

# For now OpenAI will be omitted
# OpenAI API key
openai_key = "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"
openai.api_key = openai_key


# download image from https://thispersondoesnotexist.com
def download_image(url, filename):
    r = requests.get(url)
    with open(filename, 'wb') as outfile:
        outfile.write(r.content)

    return filename

# generate a random name from a list of names
def generate_name():
    # load names from file
    with open('names.txt') as txt_file:
        names = txt_file.readlines()

    with open('surnames.txt') as txt_file:
        surnames = txt_file.readlines()

    # generate random name
    name = random.choice(names).strip()
    surname = random.choice(surnames).strip()

    return name + " " + surname

# generate areas of expertise
def generate_expertise():
    # load topics from file
    with open('areasOfExpertise.txt') as txt_file:
        topics = txt_file.readlines()

    # generate random expertise
    expertise = random.sample(topics, 2)
    expertise = [x.strip() for x in expertise]

    return expertise

# generate description using OpenAI
def generate_description(name, expertise):
    # just leave this empty for now
    
    description = openai.Completion.create(
    model="text-davinci-003",
    prompt="Skriv en kort introduktion på 1 sætning af journalisten med Navn: " + name + ", Ekspertiserne: " + " og ".join(expertise) + ". Skriv den i 1. person.",
    max_tokens=60,
    temperature=0
    )

    return description["choices"][0]["text"].strip()

    

if __name__ == "__main__":
    # connect to database
    client = pymongo.MongoClient("mongodb+srv://augusttollerup:X3cJTjuQmMr7aKE1@cluster0.6r0llbz.mongodb.net/")
    db = client.TrustNews
    collection = db.journalists

    # generate name
    name = generate_name()
    print("Name: " + name)

    # generate expertise
    expertise = generate_expertise()
    print("Expertise: " + str(expertise))

    # generate description
    description = generate_description(name, expertise)
    print("Description: " + description)

    # generate photo
    fp = "journalist_images/" + name.lower().replace(" ", "_") + ".jpg"
    photo = download_image("https://thispersondoesnotexist.com", fp)
    print("Photo: " + photo)

    # save to json
    json_format = {
        "name": name,
        "photo": photo,
        "description": description,
        "expertise": expertise
    }
    # with open('journalist.json', 'w') as outfile:
    #     json.dump(json_format, outfile)

    # insert into database
    collection.insert_one(json_format)
